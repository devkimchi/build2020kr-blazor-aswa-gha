jobs:
  build_and_deploy_job:
    ...
    steps:
      # Add the following three steps right after the 'checkout@v2' action.
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.300'
      - name: Update appsettings.json
        shell: bash
        run: |
          echo '{ "FUNCTIONAPP_BASE_URI": "${{ secrets.FUNCTIONAPP_BASE_URI }}", "FUNCTIONAPP_ENDPOINT": "${{ secrets.FUNCTIONAPP_ENDPOINT }}" }' > src/Demo.BlazorApp/wwwroot/appsettings.json
      - name: Publish Blazor WASM app
        shell: bash
        run: |
          dotnet publish src/Demo.BlazorApp -c Release -o published

      # Change the `app_location` and `api_location` and `api_artifact_location` below.
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v0.0.1-preview
        with:
          ...
          app_location: "published/wwwroot" # App source code path
          api_location: "src/Demo.BlazorApp.Api" # Api source code path - optional
          app_artifact_location: "published/wwwroot" # Built app content directory - optional

      # Add the following step right after the `static-web-apps-deploy@v0.0.1-preview`.
      - name: Send a message to Microsoft Teams
        uses: aliencube/microsoft-teams-actions@v0.8.0
        with:
          webhook_uri: ${{ secrets.TEAMS_WEBHOOK_URI }}
          title: ''
          summary: 'Your Blazor Web Assembly app has been successfully deployed'
          text: ''
          theme_color: ''
          sections: '[{ "activityImage": "https://raw.githubusercontent.com/justinyoo/build2020kr-blazor-aswa-gha/master/media/aswa-icon.png", "activityTitle": "Your Blazor Web Assembly app has been successfully deployed" }]'
          actions: '[{ "@type": "OpenUri", "name": "Go to the web app", "targets": [{ "os": "default", "uri": "${{ secrets.STATIC_WEBAPP_URI }}" }] }]'  
